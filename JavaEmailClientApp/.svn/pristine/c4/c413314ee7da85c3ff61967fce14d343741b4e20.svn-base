package jeep.gui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.table.AbstractTableModel;

import jeep.data.beans.Contact;
import jeep.data.beans.MailMessage;
import jeep.data.bundles.MessageController;
import jeep.data.mysql.DatabaseController;

public class ContactTableModel extends AbstractTableModel {

	private static final long serialVersionUID = 5423943180962769278L;
	private Vector<Contact> data = new Vector<Contact>();
	private Vector<String> columnNames = new Vector<String>();
	private Logger logger = Logger.getLogger(getClass().getName());

	private String[] headings = new String[3];

	public ContactTableModel(MessageController messages) {
		headings[0] = messages.getString("table_contacts_first");
		headings[1] = messages.getString("table_contacts_last");
		headings[2] = messages.getString("table_contacts_email");
		for (String h : headings)
			columnNames.addElement(h);
	}

	/**
	 * @param resultSet
	 * @return
	 */
	public int loadData(ResultSet resultSet) {
		int rowCount = 0;
		data.removeAllElements();
		try {
			resultSet.beforeFirst();
			while (resultSet.next()) {
				rowCount++;
				data.addElement(new Contact(resultSet.getInt(1), resultSet
						.getString(2), resultSet.getString(3), resultSet
						.getString(4), resultSet.getString(5), resultSet
						.getString(6), resultSet.getString(7)));
			}
		} catch (SQLException e) {
			logger.log(
					Level.SEVERE,
					"An error occured while trying to populate the ContactTableModel's entries.",
					e);
		}

		this.fireTableDataChanged();
		return rowCount;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see javax.swing.table.AbstractTableModel#getColumnName(int)
	 */
	public String getColumnName(int col) {
		return (String) columnNames.elementAt(col);
	}

	public Contact getContact(int row) {
		if (row >= 0 && row < data.size())
			return data.elementAt(row);
		else
			return null;
	}

	@Override
	public int getRowCount() {
		return data.size();
	}

	@Override
	public int getColumnCount() {
		return columnNames.size();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see javax.swing.table.AbstractTableModel#isCellEditable(int, int)
	 */
	public boolean isCellEditable(int row, int col) {
		return false;
	}

	@Override
	public Object getValueAt(int row, int col) {
		switch (col) {
		case 0:
			return data.elementAt(row).getFirstName();
		case 1:
			return data.elementAt(row).getLastName();
		case 2:
			return data.elementAt(row).getEmail();
		}
		// This should never happen.
		return null;
	}

	public void addNewContact(Contact contact) {
		data.add(contact);
		this.fireTableDataChanged();
	}

}
